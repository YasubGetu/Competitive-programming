class MyCircularDeque:

    def __init__(self, k: int):
        self.s = []
        self.x = k

    def insertFront(self, value: int) -> bool:
        if self.isFull():
            return False
        else:
            self.s.insert(0,value)
            return True
        
    def insertLast(self, value: int) -> bool:
        if self.isFull():
            return False
        else:
            self.s.append(value)
            return True

    def deleteFront(self) -> bool:
        if self.isEmpty() == True:
            return False
        else:
            self.s.pop(0)
            return True

    def deleteLast(self) -> bool:
        if self.isEmpty() == True:
            return False
        else:
            self.s.pop()
            return True
        
    def getFront(self) -> int:
        if self.isEmpty() == True:
            return -1
        else:
            return self.s[0]
        
    def getRear(self) -> int:
        if self.isEmpty() == True:
            return -1
        else:
            return self.s[-1]
        
    def isEmpty(self) -> bool:
        if self.s == []:
            return True
        else:
            return False
        
    def isFull(self) -> bool:
        if len(self.s) == self.x:
            return True
        else:
            return False
